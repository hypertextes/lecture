@use 'sass:math';
@use 'sass:list';

// Modules
// ============================================================================
$reset: true !default;

// Font Setting
// ============================================================================
$inter: true !default;
$sans-serif: Corbel, "Lucida Grande", "Lucida Sans Unicode", "Lucida Sans",
    "DejaVu Sans", "Bitstream Vera Sans", "Liberation Sans", Verdana,
    "Verdana Ref", sans-serif !default;
$monospace: Consolas, "Andale Mono WT", "Andale Mono", "Lucida Console",
    "Lucida Sans Typewriter", "DejaVu Sans Mono", "Bitstream Vera Sans Mono",
    "Liberation Mono", "Nimbus Mono L", Monaco, "Courier New", Courier,
    monospace !default;
$base: 8px !default;
$multiplier: 1.1 !default;
$line: 1.4 !default;
$offset: 3 !default;

// Color Setting
// ============================================================================
$background: #ffffff !default;
$foreground: #000000 !default;
$grey: #eee;
$accent: #357edd !default;
$success: #19a974 !default;
$error: #ff4136 !default;
$warning: #ffb700 !default;

// Functions
// ============================================================================
@function strip($number) {
    @if type-of($number) == "number" and not unitless($number) {
        @return $number / ($number * 0 + 1);
    }

    @return $number;
}

@function size($index) {
    @return math.floor(1000 * math.pow($multiplier, $index + $offset) * $base) /
        1000;
}

@mixin lerp($rules) {
    @each $rule, $values in $rules {
        $min: list.nth($values, 1);
        $max: list.nth($values, 2);
        $minv: list.nth($values, 3);
        $maxv: list.nth($values, 4);

        #{$rule}: #{$min};

        @media screen and (min-width: #{$minv}) {
            #{$rule}: calc(#{$min} + (#{strip($max)} - #{strip($min)}) * ((100vw - #{$minv}) / (#{strip($maxv)} - #{strip($minv)})));
        }

        @media screen and (min-width: #{$maxv}) {
            #{$rule}: #{$max};
        }
    }
}

// Reset
// ============================================================================
@if $reset == true {
    html,
    body,
    div,
    span,
    applet,
    object,
    iframe,
    h1,
    h2,
    h3,
    h4,
    h5,
    h6,
    p,
    blockquote,
    pre,
    a,
    abbr,
    acronym,
    address,
    big,
    cite,
    code,
    del,
    dfn,
    em,
    img,
    ins,
    kbd,
    q,
    s,
    samp,
    small,
    strike,
    strong,
    sub,
    sup,
    tt,
    var,
    b,
    u,
    i,
    center,
    dl,
    dt,
    dd,
    ol,
    ul,
    li,
    fieldset,
    form,
    label,
    legend,
    table,
    caption,
    tbody,
    tfoot,
    thead,
    tr,
    th,
    td,
    article,
    aside,
    canvas,
    details,
    embed,
    figure,
    figcaption,
    footer,
    header,
    hgroup,
    menu,
    nav,
    output,
    ruby,
    section,
    summary,
    time,
    mark,
    audio,
    video,
    hr,
    input[type="radio"],
    input[type="checkbox"] {
        box-sizing: border-box;
        margin: 0;
        padding: 0;
        border: 0;
        vertical-align: baseline;
    }

    body {
        line-height: 1;
    }

    blockquote,
    q {
        quotes: none;

        &::before,
        &::after {
            content: "";
            content: none;
        }
    }

    table {
        border-spacing: 0;
    }

    select,
    progress,
    input[type="radio"],
    input[type="checkbox"],
    input[type="range"],
    input[type="range"]::-webkit-slider-thumb {
        -webkit-appearance: none;
        appearance: none;
    }

    ul,
    ol {
        list-style-position: inside;
    }
}

// Theme
// ============================================================================
@if $inter == true {
    @import url("https://rsms.me/inter/inter.css");
}

:root {
    $colors: (
        "background": $background,
        "foreground": $foreground,
        "grey": $grey,
        "accent": $accent,
        "error": $error,
        "success": $success,
        "warning": $warning,
    );

    @for $i from 0 through 7 {
        --size-#{$i}: #{size($i)};
    }

    @each $color, $value in $colors {
        --#{$color}: #{$value};
    }

    --sans-serif: #{$sans-serif};
    --monospace: #{$monospace};
}

body {
    -webkit-font-smoothing: antialiased;
    -moz-osx-font-smoothing: grayscale;
    text-rendering: optimizeLegibility;
    line-height: $line;
    font-family: "Inter", var(--sans-serif);
    padding: 16px;

    @supports (font-variation-settings: normal) {
        font-family: "Inter var", var(--sans-serif);
    }
}

pre,
code,
kbd {
    font-family: var(--monospace);
}

p > code,
h6 > code,
h5 > code,
h4 > code,
h3 > code,
h2 > code,
h1 > code,
pre,
kbd {
    background-color: var(--grey);
}

mark,
input[type="radio"]:checked,
input[type="checkbox"]:checked {
    background-color: var(--foreground);
}

hr {
    background-color: var(--grey);
}

code,
kbd,
mark,
fieldset,
select,
button,
textarea,
table,
progress,
meter,
input:not([type="range"]) {
    border-radius: 4px;
}

code,
kbd,
mark {
    padding: 2px;
}

mark {
    color: var(--background);
}

small,
sup,
sub,
pre,
code,
kbd {
    font-size: var(--size-0);
}

body,
p {
    font-size: var(--size-1);
}

p,
ul,
ol,
dl,
hr,
table {
    margin: var(--size-1) 0;
}

h6,
blockquote,
legend {
    font-size: var(--size-2);
}

h6,
blockquote {
    margin: var(--size-7) 0;
}

h5 {
    font-size: var(--size-3);
    margin: var(--size-6) 0;
}

h4 {
    font-size: var(--size-4);
    margin: var(--size-5) 0;
}

h3 {
    font-size: var(--size-5);
    margin: var(--size-4) 0;
}

h2 {
    font-size: var(--size-6);
    margin: var(--size-3) 0;
}

h1 {
    font-size: var(--size-7);
    margin: var(--size-2) 0;
}

h1,
h2,
h3,
h4,
h5,
h6,
b,
strong,
th {
    font-weight: bold;
}

a,
select {
    background-repeat: no-repeat;
}

a {
    color: var(--accent);

    &[target="_blank"] {
        &::after {
            display: inline-block;
            height: 1em;
            width: 1em;
            background-size: 1em;
            background-image: url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M18 13v6a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V8a2 2 0 0 1 2-2h6"></path><polyline points="15 3 21 3 21 9"></polyline><line x1="10" y1="14" x2="21" y2="3"></line></svg>');
            content: "";
            vertical-align: middle;
            margin: 0 2px;
        }
    }
}

blockquote p {
    font-size: inherit;

    &:first-child {
        margin-top: 0;
    }
}

img {
    width: 100%;
}

ul,
ol,
dd {
    padding-left: 24px;
}

hr {
    height: 1px;
}

pre,
blockquote,
fieldset,
textarea {
    padding: 8px;
}

fieldset,
select,
button,
textarea,
table,
progress,
meter,
input:not([type="range"]) {
    border: 1px solid var(--foreground);
}

input,
select,
button,
textarea,
progress {
    background-color: var(--background);
}

input,
select,
button,
textarea,
a {
    &:focus {
        outline: 2px dotted;
        outline-offset: 2px;
    }
}

input,
select,
button,
textarea {
    outline-color: var(--foreground);
}

a {
    outline-color: currentColor;
}

input:not([type="radio"]):not([type="checkbox"]),
select,
button,
textarea {
    margin: 8px 4px;
}

input:not([type="range"]):not([type="radio"]):not([type="checkbox"]),
select,
button,
th,
td {
    padding: 4px 8px;
}

th,
td {
    border-bottom: 1px solid var(--foreground);

    &:not(:last-child) {
        border-right: 1px solid var(--foreground);
    }
}

tbody tr:last-child td {
    border-bottom: none;
}

input[type="radio"],
input[type="checkbox"],
input[type="range"] {
    vertical-align: middle;
}

input[type="radio"],
input[type="checkbox"] {
    height: var(--size-2);
    width: var(--size-2);
    padding: 4px;

    &:checked {
        box-shadow: 0 0 0px 1px var(--background) inset;
    }
}

input[type="radio"] {
    border-radius: 50%;
}

select {
    padding-right: 32px;
    background-image: url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><polyline points="6 9 12 15 18 9"></polyline></svg>');
    background-size: 16px 16px;
    background-position: calc(100% - 9px) center;
}

progress,
meter,
input[type="range"] {
    height: var(--size-1);
}

legend {
    padding: 0 4px;
}

meter {
    background: var(--background);
    vertical-align: middle;
    overflow: hidden;
}

// Vendor
// ============================================================================

input[type="range"]::-moz-range-track {
    background: var(--foreground);
    border-radius: 4px;
    height: 4px;
    cursor: pointer;
}

input[type="range"]::-webkit-slider-runnable-track {
    background: var(--foreground);
    border-radius: 4px;
    height: 4px;
    cursor: pointer;
}

progress::-webkit-progress-value {
    background: var(--foreground);
    border-radius: 2px;
}

progress::-moz-progress-bar {
    border-radius: 2px;
    background: var(--foreground);
}

meter::-webkit-meter-bar {
    background: var(--background);
    overflow: hidden;
    border-radius: 4px;
    background: var(--background);
    border: 1px solid var(--foreground);
}

input[type="range"]::-webkit-slider-thumb {
    border: 1px solid var(--foreground);
    background: var(--background);
    border-radius: 50%;
    height: var(--size-1);
    width: var(--size-1);
    cursor: grab;
    transform: translateY(calc(var(--size-1) / -3));
}
input[type="range"]::-moz-range-thumb {
    border: 1px solid var(--foreground);
    background: var(--background);
    border-radius: 50%;
    height: var(--size-1);
    width: var(--size-1);
    cursor: grab;
}

progress::-webkit-progress-bar {
    background: transparent;
}

/* The green (optimum) bar in Firefox */
meter:-moz-meter-optimum::-moz-meter-bar {
    background: var(--success);
}

/* The green (optimum) bar in Chrome etc. */
meter::-webkit-meter-optimum-value {
    background: var(--success);
}

/* The yellow (sub-optimum) bar in Firefox */
meter:-moz-meter-sub-optimum::-moz-meter-bar {
    background: var(--warning);
}

/* The yellow (sub-optimum) bar in Chrome etc. */
meter::-webkit-meter-suboptimum-value {
    background: var(--warning);
}

/* The red (even less good) bar in Firefox */
meter:-moz-meter-sub-sub-optimum::-moz-meter-bar {
    background: var(--error);
}

/* The red (even less good) bar in Chrome etc. */
meter::-webkit-meter-even-less-good-value {
    background: var(--error);
}
